datasource db {
  provider = "mongodb"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Session {
  course      Course?  @relation(fields: [courseId], references: [id])
  courseId    String?  @db.ObjectId
  createdAt   DateTime @default(now())
  description String?
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String?
  updatedAt   DateTime @updatedAt
  videoUrl    String?
}

model Course {
  category    EnumCourseCategory?
  createdAt   DateTime            @default(now())
  description String?
  enrollments Enrollment[]
  id          String              @id @default(auto()) @map("_id") @db.ObjectId
  resources   Resource[]
  sessions    Session[]
  title       String?
  updatedAt   DateTime            @updatedAt
}

model Resource {
  course      Course?  @relation(fields: [courseId], references: [id])
  courseId    String?  @db.ObjectId
  createdAt   DateTime @default(now())
  description String?
  fileUrl     String?
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String?
  updatedAt   DateTime @updatedAt
}

model Enrollment {
  course    Course?  @relation(fields: [courseId], references: [id])
  courseId  String?  @db.ObjectId
  createdAt DateTime @default(now())
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  progress  Int?
  updatedAt DateTime @updatedAt
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?  @db.ObjectId
}

model User {
  createdAt   DateTime     @default(now())
  email       String?      @unique
  enrollments Enrollment[]
  firstName   String?
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  lastName    String?
  password    String
  roles       Json
  updatedAt   DateTime     @updatedAt
  username    String       @unique
}

enum EnumCourseCategory {
  Option1
}
