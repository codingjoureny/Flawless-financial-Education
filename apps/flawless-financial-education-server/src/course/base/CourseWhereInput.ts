/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { EnumCourseCategory } from "./EnumCourseCategory";
import { IsEnum, IsOptional, ValidateNested } from "class-validator";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { Type } from "class-transformer";
import { EnrollmentListRelationFilter } from "../../enrollment/base/EnrollmentListRelationFilter";
import { StringFilter } from "../../util/StringFilter";
import { ResourceListRelationFilter } from "../../resource/base/ResourceListRelationFilter";
import { SessionListRelationFilter } from "../../session/base/SessionListRelationFilter";

@InputType()
class CourseWhereInput {
  @ApiProperty({
    required: false,
    enum: EnumCourseCategory,
  })
  @IsEnum(EnumCourseCategory)
  @IsOptional()
  @Field(() => EnumCourseCategory, {
    nullable: true,
  })
  category?: "Option1";

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  description?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => EnrollmentListRelationFilter,
  })
  @ValidateNested()
  @Type(() => EnrollmentListRelationFilter)
  @IsOptional()
  @Field(() => EnrollmentListRelationFilter, {
    nullable: true,
  })
  enrollments?: EnrollmentListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => ResourceListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ResourceListRelationFilter)
  @IsOptional()
  @Field(() => ResourceListRelationFilter, {
    nullable: true,
  })
  resources?: ResourceListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => SessionListRelationFilter,
  })
  @ValidateNested()
  @Type(() => SessionListRelationFilter)
  @IsOptional()
  @Field(() => SessionListRelationFilter, {
    nullable: true,
  })
  sessions?: SessionListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  title?: StringNullableFilter;
}

export { CourseWhereInput as CourseWhereInput };
